"""
Django settings for sports_academy project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

from django.utils import timezone
from configparser import ConfigParser

ENV = os.environ.get('ENV', None)

config = ConfigParser()
conf_file_path = os.path.join(os.path.dirname(__file__), 'conf.ini')
if os.path.exists(conf_file_path):
    config.read(conf_file_path)
else:
    raise Exception('You must have a conf.ini file in settings folder, view conf.sample.ini for details')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname((os.path.abspath(__file__)))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0$h*%o8ne8cu&q(ir7-_u5wrs56zw=f+n0k^4--r@30uqg&#o2'

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = config.get('host', 'ALLOWED_HOSTS', fallback='127.0.0.1').split(', ')

# Application definition

DJANGO_APPS = [
    # Default Django apps:
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',
]

THIRD_PARTY_APPS = [
    'corsheaders',
    'django_extensions',
    'django_filters',
    'rest_framework',
    'phonenumbers',
    'phonenumber_field',
    'storages',
    # 'cities',
]

LOCAL_APPS = [
    'sports_academy.center.apps.CenterConfig',
    'sports_academy.gallery.apps.GalleryConfig',
    'sports_academy.brands.apps.BrandsConfig',
    'sports_academy.company.apps.CompanyConfig',
    'sports_academy.sport.apps.SportConfig',
    'sports_academy.storefront.apps.StorefrontConfig',
    'sports_academy.team.apps.TeamConfig',
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'app/views'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config.get('database', 'ENGINE'),
        'NAME': config.get('database', 'NAME'),
        'USER': config.get('database', 'User'),
        'PASSWORD': config.get('database', 'PASSWORD'),
        'HOST': config.get('database', 'HOST'),
        'PORT': config.get('database', 'PORT'),
    }
}
DATABASES['default']['ATOMIC_REQUESTS'] = True

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 50,
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# GENERAL CONFIGURATION
# ------------------------------------------------------------------------------
# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'UTC'

# See: https://docs.djangoproject.com/en/dev/ref/settings/#language-code
LANGUAGE_CODE = 'en-us'

# See: https://docs.djangoproject.com/en/dev/ref/settings/#site-id
SITE_ID = 1

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-i18n
USE_I18N = True

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-l10n
USE_L10N = True

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-tz
USE_TZ = True

# Static & Media Settings

# STATIC FILE CONFIGURATION
# ------------------------------------------------------------------------------
# See: https://docs.djangoproject.com/en/dev/ref/settings/#static-root
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# See: https://docs.djangoproject.c om/en/dev/ref/settings/#static-url
# STA
# TIC_URL = urljoin(API_BASE_URL, '/static/')
STATIC_URL = '/static/'

# See: https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#std:setting-STATICFILES_DIRS
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    os.path.join(BASE_DIR, "public")
]

# See: https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#staticfiles-finders
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# URL Configuration
# ------------------------------------------------------------------------------
ROOT_URLCONF = 'config.urls'

WSGI_APPLICATION = 'config.wsgi.application'

# AUTHENTICATION CONFIGURATION
# ------------------------------------------------------------------------------
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# ACCOUNT_USER_DISPLAY = 'sports_academy.users.models.User'
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'http'
REST_USE_JWT = True
EMAIL_VERIFICATION_REQUIRED = False
MOBILE_VERIFICATION_REQUIRED = False
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True

# REST_AUTH_SERIALIZERS = {
#     'USER_DETAILS_SERIALIZER': 'sports_academy.users.serializers.UserDetailsSerializer'
# }

# AUTH_USER_MODEL = 'users.User'
LOGIN_REDIRECT_URL = 'users:redirect'
LOGIN_URL = 'account_login'

# SLUGLIFIER
AUTOSLUG_SLUGIFY_FUNCTION = 'slugify.slugify'

ADMIN_URL = r'^admin/'

# JWT
jwt_expiration_delta_seconds = 60000
jwt_refresh_expiration_delta_days = 7

JWT_AUTH = {
    'JWT_ALLOW_REFRESH': True,
    'JWT_EXPIRATION_DELTA': timezone.timedelta(seconds=jwt_expiration_delta_seconds),
    'JWT_REFRESH_EXPIRATION_DELTA': timezone.timedelta(days=jwt_refresh_expiration_delta_days),
    'JWT_AUTH_HEADER_PREFIX': 'JWT',
}

# MANAGER CONFIGURATION
# ------------------------------------------------------------------------------
# See: https://docs.djangoproject.com/en/dev/ref/settings/#admins
ADMINS = [
    ("""Shubham Agrawal""", 'shubham.agrawal1906@gmail.com'),
]

# See: https://docs.djangoproject.com/en/dev/ref/settings/#managers
MANAGERS = ADMINS

# PASSWORD STORAGE SETTINGS
# ------------------------------------------------------------------------------
# See https://docs.djangoproject.com/en/dev/topics/auth/passwords/#using-argon2-with-django
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
]

DEFAULT_LOGGER_NAME = 'django.request'

DEFAULT_CATEGORY_ACTIVATION = True
DEFAULT_COMMENT_ACTIVATION = True
DEFAULT_POST_ACTIVATION = True
DEFAULT_TAG_ACTIVATION = True

DEFAULT_SLUG_LENGTH = int(100)

OTP_INTERVAL = 300

WEB_BASE_URL = config.get('host', 'WEB_BASE_URL')
API_BASE_URL = config.get('host', 'API_BASE_URL')
WEB_EMAIL_ACTIVATION_URL = '/email/activate'

XML_PAGINATION_CONSTANTS = {
    'category': 200,
    'comment': 200,
    'post': 200,
    'tag': 200
}

CONTACT_US_RECIPIENTS = config.get('contact', 'RECIPIENTS').split(', ')

SOCIAL_LOGIN_ADMIN_REDIRECT_LINK = '/administrator/#/login'
SOCIAL_LOGIN_USER_REDIRECT_LINK = '/login'
